import{d as n}from"./app.2cf53764.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u62A5\u6587\u6784\u5EFA\u5668" tabindex="-1"><a class="header-anchor" href="#\u62A5\u6587\u6784\u5EFA\u5668" aria-hidden="true">#</a> \u62A5\u6587\u6784\u5EFA\u5668</h1><p>\u5185\u7F6E\u4E86\u4E24\u79CD <code>Jt808MsgBuilder</code> \u5B9E\u73B0\u7C7B\u7528\u6765\u6784\u5EFA\u62A5\u6587\uFF1A</p><ul><li>\u7528\u6765\u6784\u5EFA\u8C03\u8BD5\u62A5\u6587</li><li>\u56DE\u590D\u5BA2\u6237\u7AEF\u7684\u6D88\u606F\u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>Jt808MsgBuilder</code> \u6765\u6784\u5EFA</li></ul><h2 id="entityjt808msgbuilder" tabindex="-1"><a class="header-anchor" href="#entityjt808msgbuilder" aria-hidden="true">#</a> EntityJt808MsgBuilder</h2><p>\u8BE5\u5B9E\u73B0\u7C7B\u901A\u8FC7\u88AB <code>@Jt808ResponseBody</code> \u6807\u8BB0\u7684\u5B9E\u4F53\u7C7B\u6765\u6784\u5EFA\u62A5\u6587\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Jt808MsgBuilderTest</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528-1\uFF0C\u901A\u8FC7 Jt808MsgBuilder.msgId(int msgId) \u6765\u6307\u5B9A\u4E86\u6D88\u606FID</span>
    <span class="token comment">// \u4E5F\u53EF\u4EE5\u76F4\u63A5\u5728\u8FD9\u91CC\u6307\u5B9A\u5177\u4F53\u7684\u6D88\u606FID</span>
    <span class="token annotation punctuation">@Jt808ResponseBody</span><span class="token punctuation">(</span>msgId <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TestEntity</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. \u5E94\u7B54\u6D41\u6C34\u53F7 WORD    \u5BF9\u5E94\u7684\u5E73\u53F0\u6D88\u606F\u7684\u6D41\u6C34\u53F7</span>
        <span class="token annotation punctuation">@ResponseField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> WORD<span class="token punctuation">)</span>
        <span class="token keyword">int</span> serverFlowId<span class="token punctuation">;</span>

        <span class="token comment">// 2. \u5E94\u7B54id WORD     \u5BF9\u5E94\u7684\u5E73\u53F0\u6D88\u606F\u7684 ID</span>
        <span class="token annotation punctuation">@ResponseField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> WORD<span class="token punctuation">)</span>
        <span class="token keyword">int</span> serverMsgId<span class="token punctuation">;</span>

        <span class="token comment">// 3. \u7ED3\u679C  byte 0:\u6210\u529F/\u786E\u8BA4;1:\u5931\u8D25;2:\u6D88\u606F\u6709\u8BEF;3:\u4E0D\u652F\u6301</span>
        <span class="token annotation punctuation">@ResponseField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> BYTE<span class="token punctuation">)</span>
        <span class="token keyword">int</span> result<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token comment">// \u6D41\u6C34\u53F7\u751F\u6210\u5668(\u8FD9\u91CC\u4F7F\u7528\u4E00\u4E2A\u6C38\u8FDC\u8FD4\u56DE0\u7684\u751F\u6210\u5668\u7528\u6765\u8C03\u8BD5)</span>
    <span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 Jt808Session(\u5DF2\u7ECF\u5B9E\u73B0\u4E86Jt808FlowIdGenerator) \u6216\u8005 Jt808FlowIdGenerator.DEFAULT(\u9ED8\u8BA4\u5B9E\u73B0\u7C7B) \u6765\u751F\u6210\u81EA\u589E\u7684\u6D41\u6C34\u53F7</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Jt808FlowIdGenerator</span> ALWAYS_RETURN_0 <span class="token operator">=</span> step <span class="token operator">-&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testEntityMsgBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u901A\u8FC7\u5B9E\u4F53\u7C7B\u6765\u8F6C\u6362\u6D88\u606F\u4F53\u5185\u5BB9</span>
        <span class="token keyword">final</span> <span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setServerFlowId</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setServerMsgId</span><span class="token punctuation">(</span><span class="token number">0x8103</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setResult</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">EntityJt808MsgBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">Jt808MsgBuilder</span><span class="token punctuation">.</span><span class="token function">newEntityBuilder</span><span class="token punctuation">(</span>ALWAYS_RETURN_0<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token class-name">Jt808ProtocolVersion</span><span class="token punctuation">.</span>VERSION_2013<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span><span class="token string">&quot;013912344323&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">msgId</span><span class="token punctuation">(</span><span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_COMMON_REPLY<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> result <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;7E0001000501391234432300000000810300F87E&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HexStringUtils</span><span class="token punctuation">.</span><span class="token function">byteBufToString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;7E0001000501391234432300000000810300F87E&quot;</span><span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h2 id="bytebufjt808msgbuilder" tabindex="-1"><a class="header-anchor" href="#bytebufjt808msgbuilder" aria-hidden="true">#</a> ByteBufJt808MsgBuilder</h2><p>\u8BE5\u5B9E\u73B0\u7C7B\u901A\u8FC7 <code>Jt808ByteWriter</code> (<code>ByteBuf</code>) \u6765\u6784\u5EFA\u62A5\u6587\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Jt808MsgBuilderTest</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u6D41\u6C34\u53F7\u751F\u6210\u5668(\u8FD9\u91CC\u4F7F\u7528\u4E00\u4E2A\u6C38\u8FDC\u8FD4\u56DE0\u7684\u751F\u6210\u5668\u7528\u6765\u8C03\u8BD5)</span>
    <span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 Jt808Session(\u5DF2\u7ECF\u5B9E\u73B0\u4E86Jt808FlowIdGenerator) \u6216\u8005 Jt808FlowIdGenerator.DEFAULT(\u9ED8\u8BA4\u5B9E\u73B0\u7C7B) \u6765\u751F\u6210\u81EA\u589E\u7684\u6D41\u6C34\u53F7</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Jt808FlowIdGenerator</span> ALWAYS_RETURN_0 <span class="token operator">=</span> step <span class="token operator">-&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testByteBufMsgBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> originalBuf <span class="token operator">=</span> <span class="token class-name">ByteBufAllocator</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">.</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ByteBufJt808MsgBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">Jt808MsgBuilder</span><span class="token punctuation">.</span><span class="token function">newByteBufBuilder</span><span class="token punctuation">(</span>ALWAYS_RETURN_0<span class="token punctuation">,</span> originalBuf<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token class-name">Jt808ProtocolVersion</span><span class="token punctuation">.</span>VERSION_2013<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">msgId</span><span class="token punctuation">(</span><span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_COMMON_REPLY<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span><span class="token string">&quot;013912344323&quot;</span><span class="token punctuation">)</span>
                <span class="token comment">// \u6D88\u606F\u4F53\u501F\u52A9 Jt808ByteWriter \u6765\u5199\u5165\u5185\u5BB9</span>
                <span class="token comment">// \u4E5F\u53EF\u4EE5\u76F4\u63A5\u63D0\u4F9B\u4E00\u4E2A\u5DF2\u7ECF\u5199\u597D\u5185\u5BB9\u7684 ByteBuf \u7528\u6765\u5145\u5F53\u6D88\u606F\u4F53</span>
                <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span>writer <span class="token operator">-&gt;</span> writer
                        <span class="token comment">// 1. \u5E94\u7B54\u6D41\u6C34\u53F7 WORD    \u5BF9\u5E94\u7684\u5E73\u53F0\u6D88\u606F\u7684\u6D41\u6C34\u53F7</span>
                        <span class="token punctuation">.</span><span class="token function">writeWord</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                        <span class="token comment">// 2. \u5E94\u7B54id WORD     \u5BF9\u5E94\u7684\u5E73\u53F0\u6D88\u606F\u7684 ID</span>
                        <span class="token punctuation">.</span><span class="token function">writeWord</span><span class="token punctuation">(</span><span class="token number">0x8103</span><span class="token punctuation">)</span>
                        <span class="token comment">// 3. \u7ED3\u679C  byte 0:\u6210\u529F/\u786E\u8BA4;1:\u5931\u8D25;2:\u6D88\u606F\u6709\u8BEF;3:\u4E0D\u652F\u6301</span>
                        <span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> result <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;7E0001000501391234432300000000810300F87E&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HexStringUtils</span><span class="token punctuation">.</span><span class="token function">byteBufToString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;7E0001000501391234432300000000810300F87E&quot;</span><span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> originalBuf<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> originalBuf<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        result<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> originalBuf<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">assertEquals</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> originalBuf<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div>`,9);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
