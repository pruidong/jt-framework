import{d as n}from"./app.2cf53764.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="_808\u6570\u636E\u7C7B\u578B\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#_808\u6570\u636E\u7C7B\u578B\u5904\u7406\u5668" aria-hidden="true">#</a> 808\u6570\u636E\u7C7B\u578B\u5904\u7406\u5668</h1><h2 id="jt808bytereader" tabindex="-1"><a class="header-anchor" href="#jt808bytereader" aria-hidden="true">#</a> Jt808ByteReader</h2><p>\u7528\u6765\u4ECE <code>ByteBuf</code> \u4E2D\u8BFB\u53D6\u6307\u5B9A\u7C7B\u578B\u7684 <code>JT/T-808</code> \u6570\u636E\u7C7B\u578B\u3002</p><div class="custom-container tip"><p class="custom-container-title">tip \u5185\u7F6E\u7684\u652F\u6301 Jt808ByteReader \u7684\u7C7B</p><p><code>Jt808Request.bodyAsReader()</code> \u65B9\u6CD5\u53EF\u4EE5\u5C06\u6D88\u606F\u4F53\u8F6C\u6362\u4E3A <code>Jt808ByteReader</code> \u6765\u624B\u52A8\u8BFB\u53D6\u6570\u636E\u3002</p></div><ul><li>\u7B80\u5355\u793A\u4F8B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Jt808ByteReaderTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> originalByteBuf <span class="token operator">=</span> <span class="token class-name">ByteBufAllocator</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">.</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">JtProtocolUtils</span><span class="token punctuation">.</span><span class="token function">writeBcd</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">,</span> <span class="token string">&quot;10203040&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">JtProtocolUtils</span><span class="token punctuation">.</span><span class="token function">writeDword</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> afterRead <span class="token operator">=</span> <span class="token class-name">Jt808ByteReader</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">readBcd</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> bcdString <span class="token operator">-&gt;</span> <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;10203040&quot;</span><span class="token punctuation">,</span> bcdString<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">readUnsignedDword</span><span class="token punctuation">(</span>dword <span class="token operator">-&gt;</span> <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> dword<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">readable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u8BFB\u53D6\u5B8C\u6210\u4E4B\u540E\uFF0CJt808ByteReader \u4E0D\u4F1A\u6539\u53D8\u5185\u90E8 originalByteBuf \u7684\u5F15\u7528\u6307\u5411</span>
            <span class="token function">assertSame</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">,</span> afterRead<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// Jt808ByteReader \u53EA\u662F\u4E2A\u8F85\u52A9\u7C7B\uFF0C\u4E0D\u4F1A\u6539\u53D8\u5185\u90E8 readable() \u6307\u5411\u7684 ByteBuf \u7684 refCnt</span>
            <span class="token comment">// \u5E94\u8BE5\u5728\u6070\u5F53\u7684\u65F6\u673A\u91CA\u653E\u88AB\u5305\u88C5\u7684 originalByteBuf</span>
            originalByteBuf<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> originalByteBuf<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ul><li>\u4F7F\u7528 <code>Jt808ByteReader</code> \u6765\u89E3\u6790\u8BF7\u6C42\u4F53</li></ul><p>\u9664\u4E86\u4F7F\u7528 <code>@Jt808RequestBody</code> \u6807\u8BB0\u7684\u5B9E\u4F53\u7C7B\u6765\u89E3\u6790\u8BF7\u6C42\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>Jt808ByteReader</code> \u6765\u624B\u52A8\u8BFB\u53D6\u6570\u636E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TerminalRegisterMsgHandlerV2013</span> <span class="token keyword">implements</span> <span class="token class-name">SimpleJt808RequestHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Jt808Response</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token comment">// ...</span>

    <span class="token comment">// \u9664\u4E86\u4F7F\u7528\u6CE8\u89E3\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 \`Jt808ByteReader\` \u6765\u624B\u52A8\u8BFB\u53D6\u6570\u636E</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808Response</span> <span class="token function">handleMsg</span><span class="token punctuation">(</span><span class="token class-name">Jt808ServerExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        exchange<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">bodyAsReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">// 1. [0-2) WORD \u7701\u57DFID</span>
                <span class="token punctuation">.</span><span class="token function">readUnsignedWord</span><span class="token punctuation">(</span>provinceId <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u7701\u57DFID:{}&quot;</span><span class="token punctuation">,</span> provinceId<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 2. [2-4) WORD \u7701\u57DFID</span>
                <span class="token punctuation">.</span><span class="token function">readUnsignedWord</span><span class="token punctuation">(</span>cityId <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u7701\u57DFID:{}&quot;</span><span class="token punctuation">,</span> cityId<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 3. [4-9) BYTE[5] \u5236\u9020\u5546ID</span>
                <span class="token punctuation">.</span><span class="token function">readString</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> manufacturerId <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u5236\u9020\u5546ID:{}&quot;</span><span class="token punctuation">,</span> manufacturerId<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 4. [9-29) BYTE[20] \u7EC8\u7AEF\u578B\u53F7</span>
                <span class="token punctuation">.</span><span class="token function">readString</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> terminalType <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EC8\u7AEF\u578B\u53F7:{}&quot;</span><span class="token punctuation">,</span> terminalType<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 5. [29-36) BYTE[7] \u7EC8\u7AEFID</span>
                <span class="token punctuation">.</span><span class="token function">readString</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> terminalId <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EC8\u7AEFID:{}&quot;</span><span class="token punctuation">,</span> terminalId<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 6. [36]   BYTE    \u8F66\u724C\u989C\u8272</span>
                <span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span>color <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F66\u724C\u989C\u8272:{}&quot;</span><span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 7. [37,n)   String    \u8F66\u8F86\u6807\u8BC6</span>
                <span class="token punctuation">.</span><span class="token function">readString</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msgBodyLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">37</span><span class="token punctuation">,</span> carIdentifier <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F66\u8F86\u6807\u8BC6:{}&quot;</span><span class="token punctuation">,</span> carIdentifier<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="jt808bytewriter" tabindex="-1"><a class="header-anchor" href="#jt808bytewriter" aria-hidden="true">#</a> Jt808ByteWriter</h2><p>\u7528\u6765\u50CF <code>ByteBuf</code> \u4E2D\u5199\u5165\u6307\u5B9A\u7C7B\u578B\u7684 <code>JT/T-808</code> \u6570\u636E\u7C7B\u578B\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u5185\u7F6E\u7684\u652F\u6301 Jt808ByteWriter \u7684\u7C7B</p><ul><li><code>Jt808Response.Jt808ResponseBuilder.body(Consumer&lt;Jt808ByteWriter&gt;)</code></li><li><code>ByteBufJt808MsgBuilder.body(Consumer&lt;Jt808ByteWriter&gt;)</code></li></ul></div><ul><li>\u7B80\u5355\u793A\u4F8B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Jt808ByteWriterTest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> originalByteBuf <span class="token operator">=</span> <span class="token class-name">ByteBufAllocator</span><span class="token punctuation">.</span>DEFAULT<span class="token punctuation">.</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">Jt808ByteWriter</span> writer <span class="token operator">=</span> <span class="token class-name">Jt808ByteWriter</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">ByteBuf</span> afterWrite <span class="token operator">=</span> writer
                    <span class="token punctuation">.</span><span class="token function">writeBcd</span><span class="token punctuation">(</span><span class="token string">&quot;10203040&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span><span class="token string">&quot;STRING&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">writeDWord</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
                    <span class="token comment">// \u8FD9\u91CC\u8FD4\u56DE\u7684 ByteBuf \u5E94\u8BE5\u548C\u521D\u59CB\u5316\u4F20\u5165\u7684\u662F\u540C\u4E00\u4E2A\u5BF9\u8C61</span>
                    <span class="token punctuation">.</span><span class="token function">writable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">assertSame</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">,</span> afterWrite<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;10203040535452494E4700000064&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HexStringUtils</span><span class="token punctuation">.</span><span class="token function">byteBufToString</span><span class="token punctuation">(</span>originalByteBuf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;10203040535452494E4700000064&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HexStringUtils</span><span class="token punctuation">.</span><span class="token function">byteBufToString</span><span class="token punctuation">(</span>afterWrite<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// Jt808ByteWriter \u53EA\u662F\u4E2A\u8F85\u52A9\u7C7B\uFF0C\u4E0D\u4F1A\u6539\u53D8\u5185\u90E8 writable() \u6307\u5411\u7684 ByteBuf \u7684 refCnt</span>
            <span class="token comment">// \u5E94\u8BE5\u5728\u6070\u5F53\u7684\u65F6\u673A\u91CA\u653E\u88AB\u5305\u88C5\u7684 originalByteBuf</span>
            originalByteBuf<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> originalByteBuf<span class="token punctuation">.</span><span class="token function">refCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ul><li>\u4F7F\u7528 <code>Jt808ByteWriter</code> \u624B\u52A8\u7F16\u7801\u54CD\u5E94\u4F53</li></ul><p>\u9664\u4E86\u4F7F\u7528 <code>@Jt808ResponseBody</code> \u6807\u8BB0\u7684\u5B9E\u4F53\u7C7B\u6765\u7F16\u7801\u8BF7\u6C42\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>Jt808ByteWriter</code> \u6765\u624B\u52A8\u5199\u5165\u6570\u636E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TerminalRegisterMsgHandlerV2013</span> <span class="token keyword">implements</span> <span class="token class-name">SimpleJt808RequestHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Jt808Response</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808Response</span> <span class="token function">handleMsg</span><span class="token punctuation">(</span><span class="token class-name">Jt808ServerExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">return</span> <span class="token class-name">Jt808Response</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">msgId</span><span class="token punctuation">(</span><span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_REGISTER_REPLY<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">flowId</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextFlowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// \u9664\u4E86\u4F7F\u7528\u6CE8\u89E3\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 \`Jt808ByteWriter\` \u6765\u624B\u52A8\u5199\u5165\u6570\u636E</span>
                <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span>writer <span class="token operator">-&gt;</span> writer
                        <span class="token comment">// 1. byte[0,2) WORD \u5BF9\u5E94\u7684\u7EC8\u7AEF\u6CE8\u518C\u6D88\u606F\u7684\u6D41\u6C34\u53F7</span>
                        <span class="token punctuation">.</span><span class="token function">writeWord</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token comment">// 2. byte[2,3) BYTE 0:\u6210\u529F;1:\u8F66\u8F86\u5DF2\u88AB\u6CE8\u518C;2:\u6570\u636E\u5E93\u4E2D\u65E0\u8BE5\u8F66\u8F86; 3:\u7EC8\u7AEF\u5DF2\u88AB\u6CE8\u518C;4:\u6570\u636E\u5E93\u4E2D\u65E0\u8BE5\u7EC8\u7AEF</span>
                        <span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                        <span class="token comment">// 3. byte[3,x) STRING \u9274\u6743\u7801(\u53EA\u6709\u5728\u6210\u529F\u540E\u624D\u6709\u8BE5\u5B57\u6BB5)</span>
                        <span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span><span class="token string">&quot;AuthCode-123&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,17);function t(e,c){return p}var l=s(a,[["render",t]]);export{l as default};
