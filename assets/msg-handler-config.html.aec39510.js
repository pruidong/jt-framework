import{r as t,o as l,c as u,a as n,b as a,w as e,F as i,d as o,e as s}from"./app.2cf53764.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=o(`<h1 id="\u6D88\u606F\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u6D88\u606F\u5904\u7406\u5668" aria-hidden="true">#</a> \u6D88\u606F\u5904\u7406\u5668</h1><p><code>MsgHandler</code> \u8D1F\u8D23\u5904\u7406\u7ECF\u8FC7 <code>RequestMsgBodyConverter</code> \u8F6C\u6362\u4E4B\u540E\u7684 <code>\u8BF7\u6C42\u4F53\u6D88\u606F\u5B9E\u4F53\u7C7B</code>\u3002</p><p>\u5BF9\u4E8E\u8BF7\u6C42\u6D88\u606F\u7684\u5904\u7406\u5B8C\u5168\u662F\u7531 <code>MsgHandler</code> \u63A5\u53E3\u6765\u5B9E\u73B0\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MsgHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">RequestMsgBody</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">OrderedComponent</span> <span class="token punctuation">{</span>

    <span class="token keyword">default</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSupportedMsgTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Sets</span><span class="token punctuation">.</span><span class="token function">newHashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">handleMsg</span><span class="token punctuation">(</span><span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">T</span> body<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,4),m={class:"custom-container danger"},b=n("p",{class:"custom-container-title"},"MsgHandler",-1),g=n("li",null,[s("\u81EA\u5B9A\u4E49\u7684\u6D88\u606F\u5904\u7406\u5668 "),n("code",null,"\u5FC5\u987B"),s(" \u5B9E\u73B0 "),n("code",null,"MsgHandler"),s(" \u8FD9\u4E2A\u6CDB\u578B\u63A5\u53E3")],-1),y=s("\u5F53\u7136\uFF0C\u8FD9\u79CD\u5B9E\u73B0\u63A5\u53E3\u5E76\u624B\u52A8\u6CE8\u518C\u7684\u65B9\u5F0F\u663E\u5F97\u975E\u5E38\u7E41\u7410\uFF0C\u4F60\u5B8C\u5168\u53EF\u4EE5 "),h=s("\u53C2\u8003\u8FD9\u91CC"),f=s(" \u4F7F\u7528 "),_=n("code",null,"\u57FA\u4E8E\u6CE8\u89E3",-1),w=s(" \u7684\u65B9\u5F0F\u6765\u5B9E\u73B0 "),v=n("code",null,"MsgHandler",-1),M=s(" \u7684\u529F\u80FD\u3002"),C=o(`<p>\u6D88\u606F\u5904\u7406\u5B8C\u6210\u540E\u5BF9\u5BA2\u6237\u7AEF\u7684\u54CD\u5E94\u4E5F\u662F\u4E00\u4E2A <code>byte[]</code> \uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>handleMsg()</code> \u65B9\u6CD5\u7684 <code>Session</code> \u53C2\u6570\u4E2D\u62FF\u5230 <code>Netty</code> \u7684 <code>Channel</code>\uFF0C\u7136\u540E\u901A\u8FC7 <code>Channel</code> \u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF\u3002</p><h2 id="\u624B\u52A8\u5B9E\u73B0\u5E76\u6CE8\u518C" tabindex="-1"><a class="header-anchor" href="#\u624B\u52A8\u5B9E\u73B0\u5E76\u6CE8\u518C" aria-hidden="true">#</a> \u624B\u52A8\u5B9E\u73B0\u5E76\u6CE8\u518C</h2><h3 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h3><ul><li>\u6240\u4EE5\u4E00\u822C\u7684\u6D88\u606F\u5904\u7406\u6B65\u9AA4\u5E94\u8BE5\u50CF\u4E0B\u9762\u8FD9\u6837\uFF1A</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SampleMsgHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MsgHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthRequestMsgBody</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">byte</span> SUCCESS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span> AUTH_CODE_ERROR <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSupportedMsgTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMsg</span><span class="token punctuation">(</span><span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">AuthRequestMsgBody</span> body<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> authCode <span class="token operator">=</span> body<span class="token punctuation">.</span><span class="token function">getAuthCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u9274\u6743\u903B\u8F91</span>
        <span class="token keyword">final</span> <span class="token keyword">byte</span> result <span class="token operator">=</span> <span class="token function">isValidAuthCode</span><span class="token punctuation">(</span>authCode<span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">?</span> SUCCESS
                <span class="token operator">:</span> AUTH_CODE_ERROR<span class="token punctuation">;</span>

        <span class="token comment">// \u7EC4\u88C5\u54CD\u5E94\u6D88\u606F\u7684\u5B57\u8282\u6570\u7EC4(\u522B\u5FD8\u4E86\u8F6C\u4E49)</span>
        <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> respMsgBody <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">encodeMsgBody</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> metadata<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u53D1\u9001\u7ED9\u5BA2\u6237\u7AEF</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">send2Client</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> respMsgBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">encodeMsgBody</span><span class="token punctuation">(</span><span class="token keyword">byte</span> result<span class="token punctuation">,</span> <span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token comment">// \u6309\u6587\u6863\u683C\u5F0F\u7EC4\u88C5\u5B57\u8282\u6570\u7EC4</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isValidAuthCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> authCode<span class="token punctuation">,</span> <span class="token class-name">String</span> terminalId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token comment">// \u5177\u4F53\u9274\u6743\u903B\u8F91</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">send2Client</span><span class="token punctuation">(</span><span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ChannelFuture</span> future <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">writeAndFlush</span><span class="token punctuation">(</span><span class="token class-name">Unpooled</span><span class="token punctuation">.</span><span class="token function">copiedBuffer</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>future<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR : &#39;send data to client:&#39;&quot;</span><span class="token punctuation">,</span> future<span class="token punctuation">.</span><span class="token function">cause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><ul><li>\u53C8\u6216\u8005\u50CF\u8FD9\u6837 <ul><li>\u7EE7\u627F <code>AbstractMsgHandler</code></li><li>\u8FD9\u91CC\u7684 <code>RespMsgBody.toBytes()</code> \u4E0D\u7528\u8F6C\u4E49</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@BuiltinComponent</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthMsgHandler</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMsgHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthRequestMsgBody</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSupportedMsgTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">newHashSet</span><span class="token punctuation">(</span><span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RespMsgBody</span><span class="token punctuation">&gt;</span></span> <span class="token function">doProcess</span><span class="token punctuation">(</span><span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">AuthRequestMsgBody</span> body<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;receive AuthMsg : {}&quot;</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> valid <span class="token operator">=</span> authCodeValidator<span class="token punctuation">.</span><span class="token function">validateAuthCode</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> metadata<span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token function">commonSuccessReply</span><span class="token punctuation">(</span>metadata<span class="token punctuation">,</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">CommonReplyMsgBody</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>AUTH_CODE_ERROR<span class="token punctuation">,</span> metadata<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFlowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li>\u4EE5\u4E0B\u4E3A\u793A\u4F8B\u6027\u7684\u5904\u7406\u4F4D\u7F6E\u6D88\u606F\u7684 <code>MsgHandler</code></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocationInfoUploadMsgHandler</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMsgHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LocationUploadMsgBody</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RespMsgBody</span><span class="token punctuation">&gt;</span></span> <span class="token function">doProcess</span><span class="token punctuation">(</span><span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span> <span class="token class-name">LocationUploadMsgBody</span> body<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token function">commonSuccessReply</span><span class="token punctuation">(</span>metadata<span class="token punctuation">,</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_LOCATION_INFO_UPLOAD<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u6CE8\u518C\u81EA\u5B9A\u4E49msghandler" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u518C\u81EA\u5B9A\u4E49msghandler" aria-hidden="true">#</a> \u6CE8\u518C\u81EA\u5B9A\u4E49MsgHandler</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Jt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span> 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureMsgHandlerMapping</span><span class="token punctuation">(</span><span class="token class-name">MsgHandlerMapping</span> mapping<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configureMsgHandlerMapping</span><span class="token punctuation">(</span>mapping<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u4F60\u5728\u8FD9\u91CC\u6CE8\u518C\u4E86\u81EA\u5B9A\u4E49\u7684\u9274\u6743\u6D88\u606F\u5904\u7406\u5668\uFF0C\u90A3\u4E48AuthCodeValidator\u4E5F\u65E0\u9700\u63D0\u4F9B\u4E86</span>
        <span class="token comment">// \u6B64\u5904\u4E5F\u53EF\u4EE5\u4ECESpring\u5BB9\u5668\u4E2D\u83B7\u53D6bean\u6765\u6CE8\u5165\uFF0C\u4E0D\u4E00\u5B9A\u8981\u624B\u52A8new\u4E00\u4E2AHandler\u6CE8\u518C</span>
        mapping<span class="token punctuation">.</span><span class="token function">registerConverter</span><span class="token punctuation">(</span><span class="token class-name">Jt808MsgType</span><span class="token punctuation">.</span>CLIENT_LOCATION_INFO_UPLOAD<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LocationInfoUploadMsgHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u57FA\u4E8E\u6CE8\u89E3\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u6CE8\u89E3\u5B9E\u73B0" aria-hidden="true">#</a> \u57FA\u4E8E\u6CE8\u89E3\u5B9E\u73B0</h2>`,12),S={class:"custom-container tip"},H=n("p",{class:"custom-container-title"},"\u4F20\u9001\u95E8",-1),R=s("\u57FA\u4E8E\u6CE8\u89E3\u6765\u5B9E\u73B0MsgHandler\u7684\u529F\u80FD "),T=s("\u8BF7\u79FB\u6B65\u8FD9\u91CC"),x=n("hr",null,null,-1),j={class:"custom-container tip"},B=n("p",{class:"custom-container-title"},"\u4F20\u9001\u95E8",-1),O=s("\u672C\u5C0F\u8282\u793A\u4F8B\u53EF\u4EE5\u5728 "),A={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"},E=s("samples/jt-808-server-sample-customized"),I=s(" \u627E\u5230\u76F8\u5173\u4EE3\u7801\u3002");function q(L,U){const p=t("RouterLink"),c=t("ExternalLinkIcon");return l(),u(i,null,[d,n("div",m,[b,n("ul",null,[g,n("li",null,[y,a(p,{to:"/v1/jt-808/guide/customization/docs/v1/jt-808/guide/annotation-based-dev/msg-handler-register.html#@jt808requestmsghandlermapping"},{default:e(()=>[h]),_:1}),f,_,w,v,M])])]),C,n("div",S,[H,n("p",null,[R,a(p,{to:"/v1/jt-808/guide/customization/docs/v1/jt-808/guide/annotation-based-dev/msg-handler-register.html#@Jt808RequestMsgHandlerMapping"},{default:e(()=>[T]),_:1})])]),x,n("div",j,[B,n("p",null,[O,n("a",A,[E,a(c)]),I])])],64)}var V=r(k,[["render",q]]);export{V as default};
