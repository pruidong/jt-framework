import{d as n}from"./app.2cf53764.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6D88\u606F\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6D88\u606F\u7C7B\u578B" aria-hidden="true">#</a> \u6D88\u606F\u7C7B\u578B</h1><h2 id="msgtype" tabindex="-1"><a class="header-anchor" href="#msgtype" aria-hidden="true">#</a> MsgType</h2><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><ul><li>\u5404\u4E2A\u5382\u5546\u5BF9 <strong>808\u534F\u8BAE</strong> \u90FD\u662F\u9009\u62E9\u6027\u7684\u5B9E\u73B0\uFF0C\u540C\u65F6\u8FD8\u6709\u81EA\u5B9A\u4E49\u7684\u6D88\u606F\u7C7B\u578B\u3002</li><li>\u6240\u4EE5\uFF0C\u5E76\u6CA1\u6709\u5185\u7F6E\u6240\u6709\u7C7B\u578B\u7684\u6D88\u606F\uFF0C\u800C\u662F\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>MsgType</code> \u63A5\u53E3\u4EE5\u4F9B\u7528\u6237\u81EA\u884C\u6269\u5C55\u3002</li><li>\u5EFA\u8BAE\u5B9E\u73B0\u63A5\u53E3\u7684\u65F6\u5019\u4F7F\u7528\u679A\u4E3E</li></ul></div><div class="custom-container danger"><p class="custom-container-title">\u8B66\u544A</p><p>\u6BCF\u4E2A\u9879\u76EE\u90FD\u5E94\u8BE5\u63D0\u4F9B\u4E00\u4E2A\u81EA\u5DF1\u7684 <code>MsgType</code> \u5B9E\u73B0\uFF0C\u53C2\u8003\u4E0B\u9762\u7684 <code>MyMsgType</code> \u5B9A\u4E49\uFF1A</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MsgType</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@return</span> \u6D88\u606FID(\u6D88\u606F\u5934\u4E2D\u7684\u524D\u4E24\u4E2A\u5B57\u8282)
     */</span>
    <span class="token keyword">int</span> <span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">msgId</span> \u6D88\u606FID
     * <span class="token keyword">@return</span> \u8F6C\u6362\u4E4B\u540E\u7684 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MsgType</span></span><span class="token punctuation">}</span> \u5B9E\u4F8B
     */</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseFromInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> <span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">MyMsgType</span> <span class="token keyword">implements</span> <span class="token class-name">MsgType</span> <span class="token punctuation">{</span>
    <span class="token function">CLIENT_REGISTER</span><span class="token punctuation">(</span><span class="token number">0x0100</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7EC8\u7AEF\u6CE8\u518C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">CLIENT_AUTH</span><span class="token punctuation">(</span><span class="token number">0x0102</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7EC8\u7AEF\u9274\u6743&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
    <span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> msgId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> desc<span class="token punctuation">;</span>

    <span class="token class-name">MyMsgType</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">,</span> <span class="token class-name">String</span> desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msgId <span class="token operator">=</span> msgId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> mappings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MyMsgType</span> value <span class="token operator">:</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mappings<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>msgId<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseFromInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>mappings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>msgId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> msgId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="jt808msgtypeparser" tabindex="-1"><a class="header-anchor" href="#jt808msgtypeparser" aria-hidden="true">#</a> Jt808MsgTypeParser</h2><p><code>Jt808MsgTypeParser</code> \u8D1F\u8D23\u89E3\u6790 <code>MsgType</code>\u3002</p><div class="custom-container danger"><p class="custom-container-title">\u8B66\u544A</p><p>\u6BCF\u4E2A\u9879\u76EE\u90FD\u5E94\u8BE5\u63D0\u4F9B\u4E00\u4E2A\u81EA\u5DF1\u7684 <code>Jt808MsgTypeParser</code> \u5B9E\u73B0\u5E76\u52A0\u5165\u5230 <code>Spring</code> \u5BB9\u5668\u4E2D\u3002\u53C2\u8003\u4E0B\u9762\u7684 <code>MyJt808Config</code> \u5B9A\u4E49\uFF1A</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt808MsgTypeParser</span> <span class="token punctuation">{</span>

    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseMsgType</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6BCF\u4E2A\u9879\u76EE\u90FD\u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684 <code>Jt808MsgTypeParser</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJt808Config</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808MsgTypeParser</span> <span class="token function">jt808MsgTypeParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F18\u5148\u4F7F\u7528\u81EA\u5B9A\u4E49\u7C7B\u578B\u89E3\u6790</span>
        <span class="token keyword">return</span> msgId <span class="token operator">-&gt;</span> <span class="token class-name">MyMsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">.</span><span class="token function">parseFromInt</span><span class="token punctuation">(</span>msgId<span class="token punctuation">)</span>
                <span class="token comment">// \u4F7F\u7528\u5185\u7F6E\u7C7B\u578B\u89E3\u6790</span>
                <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">.</span><span class="token function">parseFromInt</span><span class="token punctuation">(</span>msgId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,12);function e(t,c){return p}var u=s(a,[["render",e]]);export{u as default};
