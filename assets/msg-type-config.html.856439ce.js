import{r as p,o as t,c as e,a as n,b as c,F as o,d as l,e as s}from"./app.2cf53764.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=l(`<h1 id="\u6D88\u606F\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6D88\u606F\u7C7B\u578B" aria-hidden="true">#</a> \u6D88\u606F\u7C7B\u578B</h1><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><ul><li>\u5404\u4E2A\u5382\u5546\u5BF9808\u534F\u8BAE\u90FD\u662F\u9009\u62E9\u6027\u7684\u5B9E\u73B0\uFF0C\u540C\u65F6\u8FD8\u6709\u81EA\u5B9A\u4E49\u7684\u6D88\u606F\u7C7B\u578B\u3002</li><li>\u6240\u4EE5\uFF0C\u5E76\u6CA1\u6709\u5185\u7F6E\u6240\u6709\u7C7B\u578B\u7684\u6D88\u606F\uFF0C\u800C\u662F\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>MsgType</code> \u63A5\u53E3\u4EE5\u4F9B\u7528\u6237\u81EA\u884C\u6269\u5C55\u3002</li><li>\u5EFA\u8BAE\u5B9E\u73B0\u63A5\u53E3\u7684\u65F6\u5019\u4F7F\u7528\u679A\u4E3E</li></ul></div><h2 id="\u6269\u5C55msgtype" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55msgtype" aria-hidden="true">#</a> \u6269\u5C55MsgType</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Jt808MsgType</span> <span class="token keyword">implements</span> <span class="token class-name">MsgType</span> <span class="token punctuation">{</span>
    <span class="token function">CLIENT_AUTH</span><span class="token punctuation">(</span><span class="token number">0x0102</span><span class="token punctuation">,</span> <span class="token string">&quot;\u7EC8\u7AEF\u9274\u6743&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">CLIENT_LOCATION_INFO_UPLOAD</span><span class="token punctuation">(</span><span class="token number">0x0200</span><span class="token punctuation">,</span> <span class="token string">&quot;\u4F4D\u7F6E\u4E0A\u62A5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> msgId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> desc<span class="token punctuation">;</span>

    <span class="token class-name">Jt808MsgType</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">,</span> <span class="token class-name">String</span> desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>msgId <span class="token operator">=</span> msgId<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>desc <span class="token operator">=</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Jt808MsgType</span><span class="token punctuation">&gt;</span></span> mapping <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Jt808MsgType</span> type <span class="token operator">:</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mapping<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span>msgId<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseFromInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>mapping<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>msgId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u5B9A\u5236msgtypeparser" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u5236msgtypeparser" aria-hidden="true">#</a> \u5B9A\u5236MsgTypeParser</h2><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p><code>MsgTypeParser</code> \u7684\u8FD4\u56DE\u7C7B\u578B\u4E3A <code>java.util.Optional&lt;MsgType&gt;</code> \u3002</p><p>\u5373\u4FBF\u662F\u65E0\u6CD5\u5904\u7406\u7684\u6D88\u606F\u4E5F\u4E0D\u8981\u8FD4\u56DE <code>null</code> \u800C\u5E94\u8BE5\u4EE5 <code>Optional.empty()</code> \u4EE3\u66FF\u3002</p><p>\u6B64\u65F6\u4F1A\u8DF3\u8FC7\u8FD9\u79CD\u672A\u77E5\u7C7B\u578B\u7684\u6D88\u606F\u5904\u7406\uFF0C\u5E76\u4F1A\u5728\u65E5\u5FD7\u91CC\u6253\u5370 <code>warn</code> \u7EA7\u522B\u7684\u65E5\u5FD7\u3002</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Jt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span> 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">MsgTypeParser</span> <span class="token function">supplyMsgTypeParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> msgType <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5148\u4F7F\u7528\u81EA\u5B9A\u4E49\u89E3\u6790\u5668</span>
            <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgType</span><span class="token punctuation">&gt;</span></span> type <span class="token operator">=</span> <span class="token class-name">Jt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">.</span><span class="token function">parseFromInt</span><span class="token punctuation">(</span>msgType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> type<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">?</span> type
                    <span class="token comment">// \u81EA\u5B9A\u4E49\u89E3\u6790\u5668\u65E0\u6CD5\u89E3\u6790,\u4F7F\u7528\u5185\u7F6E\u89E3\u6790\u5668</span>
                    <span class="token operator">:</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">.</span><span class="token function">parseFromInt</span><span class="token punctuation">(</span>msgType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,7),k={class:"custom-container tip"},m=n("p",{class:"custom-container-title"},"\u4F20\u9001\u95E8",-1),d=s("\u672C\u5C0F\u8282\u793A\u4F8B\u53EF\u4EE5\u5728 "),b={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"},g=s("samples/jt-808-server-sample-customized"),y=s(" \u627E\u5230\u76F8\u5173\u4EE3\u7801\u3002");function h(f,_){const a=p("ExternalLinkIcon");return t(),e(o,null,[r,n("div",k,[m,n("p",null,[d,n("a",b,[g,c(a)]),y])])],64)}var T=u(i,[["render",h]]);export{T as default};
