import{r as e,o as p,c as t,a as n,b as o,F as c,d as l,e as s}from"./app.2cf53764.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=l(`<h1 id="\u8F6C\u4E49\u76F8\u5173" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u4E49\u76F8\u5173" aria-hidden="true">#</a> \u8F6C\u4E49\u76F8\u5173</h1><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u6BCF\u4E2A\u786C\u4EF6\u5382\u5546\u5B9E\u73B0808\u534F\u8BAE\u7684\u65F6\u5019\u5BF9\u8F6C\u4E49\u7684\u5904\u7406\u53EF\u80FD\u7565\u6709\u4E0D\u540C\u3002</p><p>\u5982\u679C\u5185\u7F6E\u7684\u8F6C\u4E49\u903B\u8F91\u4E0D\u7B26\u5408\u8981\u6C42\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0 BytesEncoder \u63A5\u53E3\u5B9E\u73B0\u8F6C\u4E49\u903B\u8F91\u3002</p><p>\u4E4B\u540E\u8986\u76D6\u5185\u7F6E\u7684\u5904\u7406\u903B\u8F91\u5373\u53EF\u3002</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Jt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">BytesEncoder</span> <span class="token function">supplyBytesEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BytesEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">doEscapeForReceive</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MsgEscapeException</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">doEscapeForSend</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MsgEscapeException</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,3),k={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"\u4F20\u9001\u95E8",-1),b=s("\u672C\u5C0F\u8282\u793A\u4F8B\u53EF\u4EE5\u5728 "),m={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"},y=s("samples/jt-808-server-sample-customized"),_=s(" \u627E\u5230\u76F8\u5173\u4EE3\u7801\u3002");function w(h,v){const a=e("ExternalLinkIcon");return p(),t(c,null,[i,n("div",k,[d,n("p",null,[b,n("a",m,[y,o(a)]),_])])],64)}var x=r(u,[["render",w]]);export{x as default};
