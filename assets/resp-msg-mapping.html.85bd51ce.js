import{r as e,o,c,a as s,b as p,w as t,F as l,e as n,d as u}from"./app.2cf53764.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=s("h1",{id:"\u54CD\u5E94\u6D88\u606F\u6620\u5C04",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u54CD\u5E94\u6D88\u606F\u6620\u5C04","aria-hidden":"true"},"#"),n(" \u54CD\u5E94\u6D88\u606F\u6620\u5C04")],-1),d=n("\u672C\u8282\u5185\u5BB9\u662F "),m=n("\u57FA\u4E8E\u6CE8\u89E3\u7684\u6D88\u606F\u5904\u7406\u5668"),b=n(" \u7684\u540E\u7EED\u5185\u5BB9\u3002"),y=n("\u6240\u4EE5\u672C\u5C0F\u8282\u6240\u8BF4\u7684 "),g=s("code",null,"\u57FA\u4E8E\u6CE8\u89E3\u7684\u54CD\u5E94\u6D88\u606F\u6620\u5C04",-1),h=n(" \u90FD\u662F\u57FA\u4E8E "),M=n("\u57FA\u4E8E\u6CE8\u89E3\u7684\u6D88\u606F\u5904\u7406\u5668"),w=n(" \u800C\u8A00\u7684\uFF0C\u50CF\u4E0B\u9762\u8FD9\u79CD\u5904\u7406\u65B9\u5F0F\uFF1A"),f=u(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Jt808RequestMsgHandler</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Jt808RequestMsgHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x0102</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">RespMsgBody</span> <span class="token function">processAuthMsg</span><span class="token punctuation">(</span><span class="token class-name">AuthRequestMsgBody</span> msgBody<span class="token punctuation">,</span> <span class="token class-name">RequestMsgHeader</span> header<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u5904\u7406\u9274\u6743\u6D88\u606F terminalId = {}, authCode = {}&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgBody<span class="token punctuation">.</span><span class="token function">getAuthCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">CommonReplyMsgBody</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getFlowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_AUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u76F4\u63A5\u8FD4\u56DErespmsgbody" tabindex="-1"><a class="header-anchor" href="#\u76F4\u63A5\u8FD4\u56DErespmsgbody" aria-hidden="true">#</a> \u76F4\u63A5\u8FD4\u56DERespMsgBody</h2><p>\u5BF9\u4E8E\u8FD9\u79CD\u76F4\u63A5\u8FD4\u56DE <code>RespMsgBody</code> \u7684 <code>MsgHandler</code>\uFF0C\u5176\u5B9E\u8F6C\u6362\u903B\u8F91\u5DF2\u7ECF\u5728 <code>RespMsgBody.toBytes()</code> \u91CC\u5B9E\u73B0\u4E86\u3002</p><p>\u5E38\u7528\u7684 <code>\u670D\u52A1\u7AEF\u901A\u7528\u5E94\u7B54\u6D88\u606F</code>\uFF0C\u53EF\u4EE5\u7528\u5185\u7F6E\u7684 <code>CommonReplyMsgBody</code> \u6765\u8868\u793A\u3002\u6B64\u5904\u4E0D\u518D\u8D58\u8FF0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonReplyMsgBody</span> <span class="token keyword">implements</span> <span class="token class-name">RespMsgBody</span> <span class="token punctuation">{</span>

    <span class="token comment">// 1. \u5E94\u7B54\u6D41\u6C34\u53F7 WORD terminal flowId</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> replyFlowId<span class="token punctuation">;</span>
    <span class="token comment">// 2. \u5E94\u7B54id WORD 0x0102 ...</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> replyMsgId<span class="token punctuation">;</span>
    <span class="token comment">// 3. \u7ED3\u679C  byte 0:\u6210\u529F/\u786E\u8BA4;1:\u5931\u8D25;2:\u6D88\u606F\u6709\u8BEF;3:\u4E0D\u652F\u6301</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">byte</span> result <span class="token operator">=</span> SUCCESS<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">CommonReplyMsgBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CommonReplyMsgBody</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">int</span> replyFlowId<span class="token punctuation">,</span> <span class="token class-name">MsgType</span> replyFor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">of</span><span class="token punctuation">(</span>SUCCESS<span class="token punctuation">,</span> replyFlowId<span class="token punctuation">,</span> replyFor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">CommonReplyMsgBody</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">byte</span> result<span class="token punctuation">,</span> <span class="token keyword">int</span> replyFlowId<span class="token punctuation">,</span> <span class="token class-name">MsgType</span> replyFor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonReplyMsgBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setReplyFlowId</span><span class="token punctuation">(</span>replyFlowId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setReplyMsgId</span><span class="token punctuation">(</span>replyFor<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">concatAll</span><span class="token punctuation">(</span>
                <span class="token class-name">IntBitOps</span><span class="token punctuation">.</span><span class="token function">intTo2Bytes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getReplyFlowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">IntBitOps</span><span class="token punctuation">.</span><span class="token function">intTo2Bytes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getReplyMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">MsgType</span> <span class="token function">replyMsgType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>SERVER_COMMON_REPLY<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h2 id="\u4E0D\u7ED9\u5BA2\u6237\u7AEF\u56DE\u590D\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u7ED9\u5BA2\u6237\u7AEF\u56DE\u590D\u6570\u636E" aria-hidden="true">#</a> \u4E0D\u7ED9\u5BA2\u6237\u7AEF\u56DE\u590D\u6570\u636E</h2><div class="custom-container tip"><p class="custom-container-title">\u4EE5\u4E0B\u60C5\u51B5\u4E0D\u4F1A\u53D1\u9001\u6570\u636E\u7ED9\u5BA2\u6237\u7AEF\uFF1A</p><ul><li>\u624B\u52A8\u5B9E\u73B0\u7684 <code>MsgHandler</code><ul><li>\u8FD4\u56DE <code>Optional.empty()</code></li></ul></li><li>\u57FA\u4E8E <code>@Jt808RequestMsgHandlerMapping</code> \u5B9E\u73B0\u7684 <code>MsgHandler</code><ul><li>\u65B9\u6CD5\u8FD4\u56DE\u7C7B\u578B\u4E3A <code>void</code></li><li>\u65B9\u6CD5\u8FD4\u56DE\u503C\u4E3A <code>VoidRespMsgBody.NO_DATA_WILL_BE_SENT_TO_CLIENT</code></li></ul></li></ul></div><h2 id="jt808respmsgbody" tabindex="-1"><a class="header-anchor" href="#jt808respmsgbody" aria-hidden="true">#</a> @Jt808RespMsgBody</h2><p><code>MsgHandler</code> \u9664\u4E86\u76F4\u63A5\u8FD4\u56DE <code>RespMsgBody</code> \u5916\uFF0C\u8FD8\u53EF\u4EE5\u8FD4\u56DE \u88AB <code>@Jt808RespMsgBody</code> \u6807\u8BB0\u7684\u5B9E\u4F53\u7C7B\u3002</p><h3 id="\u793A\u4F8B\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B\u4EE3\u7801" aria-hidden="true">#</a> \u793A\u4F8B\u4EE3\u7801</h3><ul><li>\u4EE5\u4E0B\u4E3A\u7EC8\u7AEF\u901A\u7528\u5E94\u7B54\u7684\u793A\u4F8B\u4EE3\u7801\uFF1A</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Value</span>
<span class="token comment">// MsgId 0x8001</span>
<span class="token annotation punctuation">@Jt808RespMsgBody</span><span class="token punctuation">(</span>respMsgId <span class="token operator">=</span> <span class="token number">0x8001</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServerCommonReplyMsgBody</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1. [0-1] \u5E94\u7B54\u6D41\u6C34\u53F7 WORD terminal flowId</span>
    <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> targetMsgDataType <span class="token operator">=</span> WORD<span class="token punctuation">)</span>
    <span class="token keyword">int</span> replyFlowId<span class="token punctuation">;</span>
    <span class="token comment">// 2. [2-3] \u5E94\u7B54id WORD 0x0102 ... </span>
    <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> targetMsgDataType <span class="token operator">=</span> WORD<span class="token punctuation">)</span>
    <span class="token keyword">int</span> replyMsgId<span class="token punctuation">;</span>
    <span class="token comment">// 3. [4] \u7ED3\u679C  byte 0:\u6210\u529F/\u786E\u8BA4;1:\u5931\u8D25;2:\u6D88\u606F\u6709\u8BEF;3:\u4E0D\u652F\u6301 </span>
    <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> targetMsgDataType <span class="token operator">=</span> BYTE<span class="token punctuation">)</span>
    <span class="token keyword">byte</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u4EE5\u4E0B\u4E3A\u5BF9\u5E94\u7684Handler\u8FD4\u56DE</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Jt808RequestMsgHandler</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Jt808RequestMsgHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x0200</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ServerCommonReplyMsgBody</span> <span class="token function">processLocationMsg</span><span class="token punctuation">(</span>
            <span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token class-name">RequestMsgMetadata</span> metadata<span class="token punctuation">,</span>
            <span class="token class-name">RequestMsgHeader</span> header<span class="token punctuation">,</span> <span class="token class-name">LocationUploadRequestMsgBody</span> msgBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">assert</span> header<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">BuiltinJt808MsgType</span><span class="token punctuation">.</span>CLIENT_LOCATION_INFO_UPLOAD<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>metadata<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> metadata<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> header<span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u5904\u7406\u4F4D\u7F6E\u4E0A\u62A5\u6D88\u606F terminalId = {}, msgBody = {}&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msgBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//         return CommonReplyMsgBody.success(header.getFlowId(), BuiltinJt808MsgType.CLIENT_LOCATION_INFO_UPLOAD);</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerCommonReplyMsgBody</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span><span class="token function">getFlowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CLIENT_LOCATION_INFO_UPLOAD<span class="token punctuation">.</span><span class="token function">getMsgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u5C5E\u6027\u89E3\u91CA" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u89E3\u91CA" aria-hidden="true">#</a> \u5C5E\u6027\u89E3\u91CA</h3><table><thead><tr><th>\u5C5E\u6027</th><th>\u89E3\u91CA</th><th>\u53D6\u503C\u793A\u4F8B</th></tr></thead><tbody><tr><td><code>respMsgId</code></td><td>\u670D\u52A1\u7AEF\u4E0B\u53D1\u6D88\u606F\u7684 <code>MsgId</code></td><td><code>0x8001</code></td></tr><tr><td><code>desc</code></td><td>\u63CF\u8FF0</td><td></td></tr></tbody></table><h3 id="commandfield" tabindex="-1"><a class="header-anchor" href="#commandfield" aria-hidden="true">#</a> @CommandField</h3><table><thead><tr><th>\u5C5E\u6027</th><th>\u89E3\u91CA</th><th>\u53D6\u503C\u793A\u4F8B</th></tr></thead><tbody><tr><td><code>order</code></td><td>\u5B57\u8282\u987A\u5E8F\uFF0C\u503C\u8D8A\u5C0F\u8D8A\u5148\u7F16\u7801</td><td><code>-1</code>\u3001<code>0</code>\u3001<code>2</code></td></tr><tr><td><code>targetMsgDataType</code></td><td>\u6570\u636E\u7C7B\u578B</td><td><code>DWORD</code></td></tr><tr><td><code>isNestedCommandField</code></td><td>\u662F\u5426\u662F\u5D4C\u5957\u7C7B\u578B\uFF0C<code>true</code> \u8868\u793A\u88AB\u4FEE\u9970\u7684\u5B57\u6BB5\u7C7B\u578B\u662F\u4E00\u4E2A <code>@CommandField</code> \u5D4C\u5957\u7684\u7C7B\u578B</td><td>\u9ED8\u8BA4\u503C: <code>false</code></td></tr><tr><td><code>customerDataTypeConverterClass</code></td><td>\u5BA2\u6237\u81EA\u5B9A\u4E49\u7ED9\u5B57\u6BB5\u7684\u7F16\u7801\u5B9E\u73B0</td><td></td></tr></tbody></table>`,18);function _(v,R){const a=e("RouterLink");return o(),c(l,null,[k,s("p",null,[d,p(a,{to:"/v1/jt-808/guide/annotation-based-dev/docs/v1/jt-808/guide/annotation-based-dev/msg-handler-register.html"},{default:t(()=>[m]),_:1}),b]),s("p",null,[y,g,h,p(a,{to:"/v1/jt-808/guide/annotation-based-dev/docs/v1/jt-808/guide/annotation-based-dev/msg-handler-register.html"},{default:t(()=>[M]),_:1}),w]),f],64)}var C=i(r,[["render",_]]);export{C as default};
